{
  "imr": {
    "prefix": "imr",
    "body": "import React from 'react'",
    "description": "Import React"
  },

  "imrc": {
    "prefix": "imrc",
    "body": "import React { Component } from 'react'",
    "description": "Import React and Component"
  },

  "impt": {
    "prefix": "impt",
    "body": "import PropTypes from 'prop-types'",
    "description": "Import PropTypes"
  },

  "rcc": {
    "prefix": "rcc",
    "body": [
      "class ${0:name} extends React.Component {",
      "\trender() {",
      "\t\treturn $1",
      "\t}",
      "}",
      "",
      "export default ${0:name}"
    ],
    "description": "Create React Class Component"
  },

  "rccs": {
    "prefix": "rccs",
    "body": [
      "class ${0:name} extends React.Component {",
      "this.state = $1",
      "\trender() {",
      "\t\treturn $2",
      "\t}",
      "}",
      "",
      "export default ${0:name}"
    ],
    "description": "Create React Class Component with state"
  },

  "rfc": {
    "prefix": "rfc",
    "body": [
      "const ${0:name} = ($1) => {",
      "\treturn $2",
      "}",
      "",
      "export default ${0:name}"
    ],
    "description": "Create React Functional Component"
  },

  },

  "cwm": {
    "prefix": "cwm",
    "body": "componentWillMount() {\n\t$0\n}",
    "description": "componentWillMount"
  },

  "cwrp": {
    "prefix": "cwrp",
    "body": "componentWillReceiveProps(nextProps) {\n\t$0\n}",
    "description": "componentWillReceiveProps"
  },

  "scu": {
    "prefix": "scu",
    "body": "shouldComponentUpdate(nextProps, nextState) {\n\t$0\n}",
    "description": "shouldComponentUpdate"
  },

  "cwu": {
    "prefix": "cwu",
    "body": "componentWillUpdate(nextProps, nextState) {\n\t$0\n}",
    "description": "componentWillUpdate"
  },

  "cdu": {
    "prefix": "cdu",
    "body": "componentDidUpdate(prevProps, prevState) {\n\t$0\n}",
    "description": "componentDidUpdate"
  },

  "cwun": {
    "prefix": "cwun",
    "body": "componentWillUnmount() {\n\t$0\n}",
    "description": "componentWillUnmount"
  },

  "cdc": {
    "prefix": "cdc",
    "body": "componentDidCatch(error, info) {\n\t$0\n}",
    "description": "componentDidCatch"
  }
}
